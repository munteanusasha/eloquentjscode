//==========================================================================
//====================  Functions Chapter   ================================
//==========================================================================
//====================  square function     ================================
{
    var square = function(x){
	return x*x;
    }
    console.log(square(13));
}

//===================   makeNoise funciton & power function     ============
//===================   function parameters / arguments     ================
{
    var makeNoise = function(){
	console.log("Pling!");
    }

    var power = function(base, exponent){
	result = 1;
	for(var count = 0; count < exponent; count++)
		result *= base;
	return result;
    }
    makeNoise();

    console.log(power(2, 10));
}

//===================   Parameters & field of view  ========================
{
    var x = "outside";

    var f1 = function(){
        var x = "inside f1";
    };
    f1();
    console.log(x);

    var f2 = function(){
        x = "inside f2";
    };
    f2();
    console.log(x);
}

//===================   Nested field of view    ============================
{
    var landscape = function(){
        var result = "";
        var flat = function(size){
            for(var count = 0; count < size; count++)
                result += "_";
        };
        var mountain = function(size){
            result += "/";
            for(var count = 0; count < size; count++)
                result += "'";
            result += "\\";
        };
        flat(3);
        mountain(4);
        flat(6);
        mountain(3);
        flat(2);
        mountain(1);
        flat(2);
        return result;
        };
        console.log(landscape());
        ___/''''\______/'''\__/'\__
}

//=================     functions as value  ================================
{
    var launchMissiles = function(value){
	missileSystem.launch("or");
    };
    if(safeMode)
    launchMissiles = function(value){/*relax!*/};
}

//=================     function Declaration    ============================
{
    function square(x){
    return x*x;
    }
}

//==========================================================================

{
    console.log("The future says:", future());

    function future(){
        return "We STILL have no flying cars.";
    };
}

//==========================================================================
{
        function example(){
        function a(){ 				//Normal
		  if(something){
			 function b(){ 		    //---BAD---VERY BAD ----!!!
			 };
		  }
	   };
    };
}


//======================    Call Stack  ====================================
{
    function greet(who){
	console.log("Hi " + who);
    };
    greet("Alex");
    console.log("Bye!");
}

//======================    Stack overflow  ================================
{
    function chicken(){
    	return egg();
    }
    function egg(){
        return chicken();
    }
    console.log(chicken() + "come first.");
}

//=======================	Unecesary arguments	===========================
{
	function power(base, exponent){
		if(exponent == 0 || exponent == undefined)
			exponent = 2;
		var result = 1;
		for(var count = 0; count < exponent; count++)
			result *= base;
		return result;
	}
	console.log(power(2));
	console.log(power(2,6));
// 4
// 64
}

//=======================	Closure		===================================
{
	function wrapValue(n){
		var localVariable = n;
		return function(){return localVariable;};
	}
	var wrap1 = wrapValue(1);
	var wrap2 = wrapValue(2);
	console.log(wrap1());
	console.log(wrap2());
// 1
// 2
}

//=======================	Closure Multiplier	==========================
{
	function multiplier(factor){
		return function(number){
			return number * factor;
		};
	}
	var twice = multiplier(2);
	console.log(twice(5));
// 10
}

//=======================	Closure Devider		==========================
{
	function divider(factor){
		return function(number){
			return number / factor;
		};
	}
	var divide = divider(3);
	console.log(divide(21));
}

//====================		Recursion		================================
{
	function power(base, exponent){
		if(exponent == 0 || exponent == undefined)
			return 1;
		else
			return base * power(base, exponent - 1);
	}
	console.log(power(2));
	console.log(power(2,6));
// 1
// 64

//====================		Find Solution		============================
{
	function findSolution(target){
		function find(start, history){
			if(start == target)
				return history;
			else if(start > target)
				return null;
			else
				return find(start + 5, "(" + history + "+5)" ) ||
					   find(start * 3, "(" + history + "*3)");
		};
		return find(1, "1");
	}
	console.log(findSolution(24));
	console.log(findSolution(13));
//	13 (((1*3)+5)*3)
//	14 (((1*3)+5)+5)
}


//====================    print Farm Inventory 1.0  ========================
{
  function printFarmInventory(cows, chickens){
    var cowString = String(cows);
    while(cowString.length < 3)
      cowString = "0" + cowString;
    console.log(cowString + "-cows");
    var chickenString = String(chickens);
    while(chickenString.length < 3)
      chickenString = "0" + chickenString;
    console.log(chickenString + "-chickens");
    }
printFarmInventory(7, 11);
// 007  Cows
// 011  Chickens
}
//==================    print Farm Inventory 2.0  ==========================
{
  function printZeroPaddedWithLabel(number, label){
      var numberString = String(number);
      while(numberString.length < 3)
        numberString = "0" + numberString;
      console.log(numberString + " " + label);
  }
  function printFarmInventory(cows, chickens, pigs){
    printZeroPaddedWithLabel(cows, "Cows");
    printZeroPaddedWithLabel(chickens, "Chiclens");
    printZeroPaddedWithLabel(pigs, "Pigs");
  }
  printFarmInventory(7,11,3);
  // 007 Cows
  // 011 Chiclens
  // 003 Pigs
}

//================  printFarmInventory  3.0   =============================
{
  function zeroPad(number, width){
      var string = String(number);
      while(string.length < 3)
        string = "0" + string;
    return string;
    }
    function printFarmInventory(cows, chickens, pigs){
      console.log(zeroPad(cows, 3) + " Cows");
      console.log(zeroPad(chickens, 3) + " Chickens");
      console.log(zeroPad(pigs, 3) + " Pigs");
    }
    printFarmInventory(7, 11, 3);
// 007 Cows
// 011 Chickens
// 003 Pigs
}

//=========================================================================
/////======================================================================
//						Exercises
/////======================================================================
//==================	Exercise 1	=======================================
{
	function min(a,b){
		if(a < b) return a;
		else return b;
	}
	console.log(min(-2, 2));
	//	-2
	console.log(min(8, 2));
	//	2
}

//================		Author Style		===============================
{
	function min(a,b){
		if(a < b) return a;
		else return b;
	}
	console.log(min(2,4));
	//	2
}

//================		Exercise 2		===================================
{
	function isEven(n){
		if(n == 0) return true;
		else if(n == 1) return false;
		else return isEven(n - 2);
	}
	console.log(isEven(50));
	// true
	console.log(isEven(75));
	// false
	console.log(isEven(-1));
	// out of stack! 
}

//================		Author Style		===============================
{
	function isEven(n){
		if(n == 0) return true;
		else if(n == 1) return false;
		else if(n < 0) return isEven(- n);
		else return isEven(n - 2);
	}
	console.log(isEven(50));
	// true
	console.log(isEven(75));
	// false
	console.log(isEven(-1));
	// false
	console.log(isEven(-2));
	// true
}

//================		Exercise 3		===================================
{
	function countBs(string){
		var result = 0;
		for(var count = 0; count > string.length - 1; count++)
			if(string.charAt(count) == "b" || string.charAt(count) ==  "B")
				result++;
		return result;
	}
	console.log(countBs("How much b is there, b, b, b."));
	// 4
}

//================		countBs & countChar		===========================
{
	function countBs(string){
		var result = 0;
		for(var count = 0; count < string.length -1; count++)
			if(string.charAt(count) == "b" || string.charAt(count) == "B")
				result ++;
		return result;
	}
	function countChar(string, char){
		var result = 0;
		for(var count = 0; count < string.length; count++)
			if(string.charAt(count) == char)
				result ++;
		return result;

	}
	console.log(countBs("how much b is there"));
	console.log(countBs("bumblebee"));
	console.log(countChar("bumblebee","e"));
	// 1
	// 3
	// 3
}

//================		countBs & countChar		==========================
{
	function countChar(string, ch){
		var counted = 0;
		for(var i = 0; i < string.length; i ++)
			if(string[i] == ch.toUpperCase() || string[i] == ch.toLowerCase())
				counted ++;
		return counted;
	}
	function countBs(string){
		return countChar(string, "b");
	}
	console.log(countBs("Bumblebee"));
	console.log(countChar("Bumblebee","e"));
}

//================		Author Style		===============================
{
	function countChar(string, ch) {
	  let counted = 0;
	  for (let i = 0; i < string.length; i++) {
		if (string[i] == ch) {
		  counted += 1;
		}
	  }
	  return counted;
	}

	function countBs(string) {
	  return countChar(string, "B");
	}

	console.log(countBs("BBC"));
	// → 2
	console.log(countChar("kakkerlak", "k"));
	// → 4
}